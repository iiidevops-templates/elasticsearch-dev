stages:
- name: Deploy--Set Environment variables
  steps:
  - envFrom:
    - sourceKey: API_TOKEN
      sourceName: pipeline-api-key
      targetKey: rancher_api_token
    - sourceKey: rancher-url
      sourceName: rancher
      targetKey: rancher_url
    runScriptConfig:
      image: iiiorg/rancher-cli:v2.4.6
      shellScript: rancher login ${rancher_url} -t ${rancher_api_token} --skip-verify
        && rancher kubectl delete configmap -n ${CICD_GIT_REPO_NAME} ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-env
        --ignore-not-found=true && rancher kubectl create configmap -n ${CICD_GIT_REPO_NAME}
        ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-env --from-env-file=iiidevops/app.env
        && rancher kubectl annotate configmap -n ${CICD_GIT_REPO_NAME} ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-env
        iiidevops.org/project_name=${CICD_GIT_REPO_NAME} iiidevops.org/branch=${CICD_GIT_BRANCH}
        iiidevops.org/commit_id=${CICD_GIT_COMMIT} iiidevops.org/type=appenv iiidevops.org/ip=10.20.0.96 iiidevops.org/port=32306
  when:
    branch:
      include:
      - master

- name: Deploy--ElasticSearch
  steps:
  - applyYamlConfig:
      path: ./k8s/deployment.yaml
  when:
    branch:
      include:
      - master

- name: Deploy--ElasticSearch-service
  steps:
  - applyYamlConfig:
      path: ./k8s/service.yaml
  when:
    branch:
      include:
      - master

- name: Deploy--Wait ElasticSearch deployment
  steps:
  - env:
      deploy_name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-es
      max_wait: 128
      namespace: ${CICD_GIT_REPO_NAME}
    envFrom:
    - sourceKey: API_TOKEN
      sourceName: pipeline-api-key
      targetKey: rancher_api_token
    - sourceKey: rancher-url
      sourceName: rancher
      targetKey: rancher_url
    runScriptConfig:
      image: iiiorg/deployment-waiter:0.0.2
      shellScript: rancher login ${rancher_url} -t ${rancher_api_token} --skip-verify;
        bash /app/run.sh
  when:
    branch:
      include:
      - master

- name: Deploy--ElasticSearch-GUI
  steps:
  - applyYamlConfig:
      path: ./k8s/deployment-head.yaml
  when:
    branch:
      include:
      - master

- name: Deploy--ElasticSearch-GUI-service
  steps:
  - applyYamlConfig:
      path: ./k8s/service-head.yaml
  when:
    branch:
      include:
      - master

- name: Deploy--Wait ElasticSearch GUI deployment
  steps:
  - env:
      deploy_name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-eshead
      max_wait: 128
      namespace: ${CICD_GIT_REPO_NAME}
    envFrom:
    - sourceKey: API_TOKEN
      sourceName: pipeline-api-key
      targetKey: rancher_api_token
    - sourceKey: rancher-url
      sourceName: rancher
      targetKey: rancher_url
    runScriptConfig:
      image: iiiorg/deployment-waiter:0.0.2
      shellScript: rancher login ${rancher_url} -t ${rancher_api_token} --skip-verify;
        bash /app/run.sh
  when:
    branch:
      include:
      - master

- name: Import--Initial-data
  steps:
  - env:
      PLUGIN_MTU: 1440
      namespace: ${CICD_GIT_REPO_NAME}
    runScriptConfig:
      image: elasticdump/elasticsearch-dump
      shellScript: "ls; ls ./data; pwd; env; bash ./import.sh"
  when:
    branch:
      include:
      - skip

- name: Import--Initial-datax
  steps:
  - applyYamlConfig:
      path: ./k8s/import.yaml
  when:
    branch:
      include:
      - skip
