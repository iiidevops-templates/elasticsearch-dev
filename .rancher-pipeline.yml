stages:
- name: Deploy--Set Environment variables
  steps:
  - envFrom:
    - sourceKey: API_TOKEN
      sourceName: pipeline-api-key
      targetKey: rancher_api_token
    - sourceKey: rancher-url
      sourceName: rancher
      targetKey: rancher_url
    runScriptConfig:
      image: iiiorg/rancher-cli:v2.4.6
      shellScript: rancher login ${rancher_url} -t ${rancher_api_token} --skip-verify
        && rancher kubectl delete configmap -n ${CICD_GIT_REPO_NAME} ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-env
        --ignore-not-found=true && rancher kubectl create configmap -n ${CICD_GIT_REPO_NAME}
        ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-env --from-env-file=iiidevops/app.env
        && rancher kubectl annotate configmap -n ${CICD_GIT_REPO_NAME} ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-env
        iiidevops.org/project_name=${CICD_GIT_REPO_NAME} iiidevops.org/branch=${CICD_GIT_BRANCH}
        iiidevops.org/commit_id=${CICD_GIT_COMMIT} iiidevops.org/type=appenv
  when:
    branch:
      include:
      - master

- name: Deploy--ElasticSearch
  steps:
  - applyYamlConfig:
      path: ./deployment.yaml
  when:
    branch:
      include:
      - master

- name: Deploy--ElasticSearch-service
  steps:
  - applyYamlConfig:
      path: ./service.yaml
  when:
    branch:
      include:
      - master

- name: Deploy--Wait ElasticSearch deployment
  steps:
  - env:
      deploy_name: ${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-es
      max_wait: 128
      namespace: ${CICD_GIT_REPO_NAME}
    envFrom:
    - sourceKey: API_TOKEN
      sourceName: pipeline-api-key
      targetKey: rancher_api_token
    - sourceKey: rancher-url
      sourceName: rancher
      targetKey: rancher_url
    runScriptConfig:
      image: iiiorg/deployment-waiter:0.0.2
      shellScript: rancher login ${rancher_url} -t ${rancher_api_token} --skip-verify;
        bash /app/run.sh
  when:
    branch:
      include:
      - master

- name: Import--Initial-data
  steps:
  - env:
      PLUGIN_MTU: 1440
    runScriptConfig:
      image: elasticdump/elasticsearch-dump
      # Ref - https://github.com/elasticsearch-dump/elasticsearch-dump
      shellScript: ls; ls ./data; pwd; elasticdump --input "csv://data/imports.csv" --output=http://${CICD_GIT_REPO_NAME}-${CICD_GIT_BRANCH}-db-svc:9200/my_index --type=data --csvDelimiter ";"
  when:
    branch:
      include:
      - master
